WRPP: URL-shortener
=============
URL shortening web application using Twister

The Application consists of a Load Balancer and a set of Application Servers.

The Load Balancer receives all the incoming requests and forwards them to the correct Application server.

An Application server handles three different requests:
	- Empty request. Returns a form with a field to introduce a URL to be shortended.
	- Shorten a URL.
	- Redirect to the original URL given the short one.
	
Each Application Server has an assigned prefix, that is added to all the short URLs generated by itself. Using this prefix,
the Load Balancer routes each redirect request to the Application Server that has generated the short url.
In this way, each Application Server is responsible of translating an independent subset of short Urls.
This allows to have completly independent memory and Data bases for each Application server, improving performance.

The Application is ready to be deployed on a single machine and using a single Load Balancer,
but can easily be adapted to be deployed on any number of servers and using any number of Load Balancers.


Prerequisites
=============

Install Memcachedb and Memcache client library for Python
In Ubuntu/Debian packages: memcachedb and python-memcache


Settings
========

All the settings are done in the file config.py


Running
=======

runner.sh is a very primitive running script configured to create two App Servers,
a Load Balancer and two data bases, one for each App Server.
